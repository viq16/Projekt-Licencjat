#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Football_Manager
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BazaFootballManager")]
	public partial class BazaDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDruzyna(Druzyna instance);
    partial void UpdateDruzyna(Druzyna instance);
    partial void DeleteDruzyna(Druzyna instance);
    partial void InsertZawodnik(Zawodnik instance);
    partial void UpdateZawodnik(Zawodnik instance);
    partial void DeleteZawodnik(Zawodnik instance);
    #endregion
		
		public BazaDataContext() : 
				base(global::Football_Manager.Properties.Settings.Default.BazaFootballManagerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BazaDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Druzyna> Druzynas
		{
			get
			{
				return this.GetTable<Druzyna>();
			}
		}
		
		public System.Data.Linq.Table<Zawodnik> Zawodniks
		{
			get
			{
				return this.GetTable<Zawodnik>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Druzyna")]
	public partial class Druzyna : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nazwa;
		
		private int _AttOvr;
		
		private int _MidOvr;
		
		private int _DefOvr;
		
		private int _StartBudget;
		
		private EntitySet<Zawodnik> _Zawodniks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnAttOvrChanging(int value);
    partial void OnAttOvrChanged();
    partial void OnMidOvrChanging(int value);
    partial void OnMidOvrChanged();
    partial void OnDefOvrChanging(int value);
    partial void OnDefOvrChanged();
    partial void OnStartBudgetChanging(int value);
    partial void OnStartBudgetChanged();
    #endregion
		
		public Druzyna()
		{
			this._Zawodniks = new EntitySet<Zawodnik>(new Action<Zawodnik>(this.attach_Zawodniks), new Action<Zawodnik>(this.detach_Zawodniks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttOvr", DbType="Int NOT NULL")]
		public int AttOvr
		{
			get
			{
				return this._AttOvr;
			}
			set
			{
				if ((this._AttOvr != value))
				{
					this.OnAttOvrChanging(value);
					this.SendPropertyChanging();
					this._AttOvr = value;
					this.SendPropertyChanged("AttOvr");
					this.OnAttOvrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MidOvr", DbType="Int NOT NULL")]
		public int MidOvr
		{
			get
			{
				return this._MidOvr;
			}
			set
			{
				if ((this._MidOvr != value))
				{
					this.OnMidOvrChanging(value);
					this.SendPropertyChanging();
					this._MidOvr = value;
					this.SendPropertyChanged("MidOvr");
					this.OnMidOvrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefOvr", DbType="Int NOT NULL")]
		public int DefOvr
		{
			get
			{
				return this._DefOvr;
			}
			set
			{
				if ((this._DefOvr != value))
				{
					this.OnDefOvrChanging(value);
					this.SendPropertyChanging();
					this._DefOvr = value;
					this.SendPropertyChanged("DefOvr");
					this.OnDefOvrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartBudget", DbType="Int NOT NULL")]
		public int StartBudget
		{
			get
			{
				return this._StartBudget;
			}
			set
			{
				if ((this._StartBudget != value))
				{
					this.OnStartBudgetChanging(value);
					this.SendPropertyChanging();
					this._StartBudget = value;
					this.SendPropertyChanged("StartBudget");
					this.OnStartBudgetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Druzyna_Zawodnik", Storage="_Zawodniks", ThisKey="Id", OtherKey="DruzynaId")]
		public EntitySet<Zawodnik> Zawodniks
		{
			get
			{
				return this._Zawodniks;
			}
			set
			{
				this._Zawodniks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zawodniks(Zawodnik entity)
		{
			this.SendPropertyChanging();
			entity.Druzyna = this;
		}
		
		private void detach_Zawodniks(Zawodnik entity)
		{
			this.SendPropertyChanging();
			entity.Druzyna = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zawodnik")]
	public partial class Zawodnik : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nazwisko;
		
		private int _SkillOvr;
		
		private string _Pozycja;
		
		private int _DruzynaId;
		
		private EntityRef<Druzyna> _Druzyna;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnSkillOvrChanging(int value);
    partial void OnSkillOvrChanged();
    partial void OnPozycjaChanging(string value);
    partial void OnPozycjaChanged();
    partial void OnDruzynaIdChanging(int value);
    partial void OnDruzynaIdChanged();
    #endregion
		
		public Zawodnik()
		{
			this._Druzyna = default(EntityRef<Druzyna>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwisko
		{
			get
			{
				return this._Nazwisko;
			}
			set
			{
				if ((this._Nazwisko != value))
				{
					this.OnNazwiskoChanging(value);
					this.SendPropertyChanging();
					this._Nazwisko = value;
					this.SendPropertyChanged("Nazwisko");
					this.OnNazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillOvr", DbType="Int NOT NULL")]
		public int SkillOvr
		{
			get
			{
				return this._SkillOvr;
			}
			set
			{
				if ((this._SkillOvr != value))
				{
					this.OnSkillOvrChanging(value);
					this.SendPropertyChanging();
					this._SkillOvr = value;
					this.SendPropertyChanged("SkillOvr");
					this.OnSkillOvrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pozycja", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Pozycja
		{
			get
			{
				return this._Pozycja;
			}
			set
			{
				if ((this._Pozycja != value))
				{
					this.OnPozycjaChanging(value);
					this.SendPropertyChanging();
					this._Pozycja = value;
					this.SendPropertyChanged("Pozycja");
					this.OnPozycjaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DruzynaId", DbType="Int NOT NULL")]
		public int DruzynaId
		{
			get
			{
				return this._DruzynaId;
			}
			set
			{
				if ((this._DruzynaId != value))
				{
					if (this._Druzyna.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDruzynaIdChanging(value);
					this.SendPropertyChanging();
					this._DruzynaId = value;
					this.SendPropertyChanged("DruzynaId");
					this.OnDruzynaIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Druzyna_Zawodnik", Storage="_Druzyna", ThisKey="DruzynaId", OtherKey="Id", IsForeignKey=true)]
		public Druzyna Druzyna
		{
			get
			{
				return this._Druzyna.Entity;
			}
			set
			{
				Druzyna previousValue = this._Druzyna.Entity;
				if (((previousValue != value) 
							|| (this._Druzyna.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Druzyna.Entity = null;
						previousValue.Zawodniks.Remove(this);
					}
					this._Druzyna.Entity = value;
					if ((value != null))
					{
						value.Zawodniks.Add(this);
						this._DruzynaId = value.Id;
					}
					else
					{
						this._DruzynaId = default(int);
					}
					this.SendPropertyChanged("Druzyna");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
